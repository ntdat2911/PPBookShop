# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AddressEntity {
  Address: String!
  AddressID: String!
  IsDefault: Boolean!
  Phone: String!
  ReceiverName: String!
  UserID: String!
}

type AuthorEntity {
  AuthorID: String!
  AuthorName: String!
  Bio: String!
}

type BookEntity {
  AuthorBy: String!
  AuthorName: String!
  BookDescription: String!
  BookID: String!
  BookPrice: Float!
  BookTitle: String!
  CategoryID: String!
  CategoryName: String!
  CreatedAt: DateTime!
  ImageURL: String!
  IsBookActive: Boolean!
  IsOutOfStock: Boolean!
  PublishDate: DateTime!
  Rating: Float!
  UpdatedAt: DateTime!
}

type CartEntity {
  CartDetail: String!
  CartID: String!
  CreatedAt: DateTime!
  UserID: String!
}

type CategoryEntity {
  CategoryID: String!
  CategoryName: String!
  CreatedAt: DateTime!
  IsCategoryActive: Boolean!
  ParentCategoryID: String!
  UpdatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GCreateReviewRequest {
  BookID: String!
  Comment: String!
  Rating: Int!
  ReviewTitle: String!
  UserID: String!
}

type GPaginatedBookResponse {
  count: Int!
  page: Int!
  records: [BookEntity!]!
  size: Int!
}

input GPaginationRequest {
  author: String
  category: String
  input: String
  page: Int!
  rating: String
  size: Int!
}

input GReviewPaginationRequest {
  bookID: String!
  page: Int!
  rating: Int
  size: Int!
}

type GReviewPaginationResponse {
  count: Int!
  page: Int!
  records: [ReviewEntity!]!
  size: Int!
}

type Mutation {
  createAddress(address: String!, isDefault: Boolean!, phone: String!, receiverName: String!, userId: String!): AddressEntity!
  createOrUpdateCart(CartDetail: String!, UserID: String!): CartEntity!
  createReview(data: GCreateReviewRequest!): ReviewEntity!
  deleteCart(id: String!): CartEntity!
  updateAddress(address: String!, addressId: String!, isDefault: Boolean!, phone: String!, receiverName: String!): AddressEntity!
}

type OverviewReviewResponse {
  averageRating: Float!
  countReviewList: [Float!]!
  total: Float!
}

type Query {
  getAddressesByUserId(userId: String!): [AddressEntity!]!
  getAuthorById(id: String!): AuthorEntity!
  getAuthors: [AuthorEntity!]!
  getBookById(id: String!): BookEntity!
  getBooks(params: GPaginationRequest!): GPaginatedBookResponse!
  getCart(id: String!): CartEntity!
  getCategories: [CategoryEntity!]!
  getReviewOverviewById(id: String!): OverviewReviewResponse!
  getReviewsByBookId(params: GReviewPaginationRequest!): GReviewPaginationResponse!
  user: UserEntity!
}

type ReviewEntity {
  BookID: String!
  Comment: String!
  CreatedAt: DateTime!
  Rating: Float!
  ReviewID: String!
  ReviewTitle: String!
  UserID: String!
  Username: String!
}

type UserEntity {
  CreatedAt: DateTime!
  Email: String!
  ImageURL: String!
  IsEmailConfirmed: Boolean!
  IsUserActive: Boolean!
  Name: String!
  Password: String!
  UpdatedAt: DateTime!
  UserID: String!
  UserName: String!
}